{"version":3,"sources":["Components/CountrySelector.js","Components/Demonym.js","Components/DemonymApp.js","Components/App.js","index.js"],"names":["CountrySelector","value","this","props","changeHandler","country","countries","find","name","options","map","i","className","htmlFor","id","onChange","e","changeSelection","target","Component","defaultProps","Demonym","DemonymApp","state","selected","setState","fetch","then","response","console","log","ok","Error","json","data","Object","keys","key","item","catch","err","error","message","demon","setSelected","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGqBA,G,0LACHC,GACd,GAAc,SAAVA,EACFC,KAAKC,MAAMC,cAAc,UACpB,CAEL,IAAMC,EAAUH,KAAKC,MAAMG,UAAUC,MACnC,SAACF,GAAD,OAAaA,EAAQG,OAASP,KAEhCC,KAAKC,MAAMC,cAAcC,M,+BAInB,IAAD,OACDI,EAAUP,KAAKC,MAAMG,UAAUI,KAAI,SAACL,EAASM,GAAV,OACvC,wBAAQV,MAAOI,EAAQG,KAAvB,SACGH,EAAQG,MADuBG,MAKpC,OACE,qBAAKC,UAAU,kBAAf,SACE,iCACE,uBAAOC,QAAQ,UAAf,+BACA,yBACEC,GAAG,UACHN,KAAK,UACLO,SAAU,SAACC,GAAD,OAAO,EAAKC,gBAAgBD,EAAEE,OAAOjB,QAHjD,UAKE,wBAAQA,MAAM,OAAd,2BACCQ,c,GA9BgCU,cAsC7CnB,EAAgBoB,aAAe,CAC7Bd,UAAW,I,MCvCE,SAASe,EAAQlB,GAC9B,OACE,sBAAKS,UAAU,UAAf,eACKT,EAAMK,KADX,eAC6BL,EAAME,W,UCDlBiB,E,kDAEnB,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CACXjB,UAAW,GACXkB,SAAU,MAJK,E,wDAQPA,GACVtB,KAAKuB,SAAS,CACZD,e,0CAIiB,IAAD,OAClBE,MAAM,oEACHC,MAAK,SAACC,GAGL,GADAC,QAAQC,IAAI,8BACPF,EAASG,GAEZ,MADAF,QAAQC,IAAI,6CACN,IAAIE,MAAM,wBAElB,OAAOJ,KAERD,MAAK,SAACC,GAAD,OAAcA,EAASK,UAC5BN,MAAK,SAACO,GACL,IAAM5B,EAAY6B,OAAOC,KAAKF,GAAMxB,KAAI,SAAC2B,GAAD,OAASH,EAAKG,GAAKC,KAAK,MAChE,EAAKb,SAAS,CACZnB,iBAGHiC,OAAM,SAACC,GACN,EAAKf,SAAS,CACZgB,MAAOD,EAAIE,e,+BAKT,IAAD,OACDC,EAAQzC,KAAKqB,MAAMC,SACvB,cAAC,EAAD,CACEhB,KAAMN,KAAKqB,MAAMC,SAAS,iBAC1BnB,QAASH,KAAKqB,MAAMC,SAAShB,OAG/B,qBAAKI,UAAU,2BAAf,oCAGI6B,EAAQvC,KAAKqB,MAAMkB,MACvB,qBAAK7B,UAAU,qBAAf,SAAqCV,KAAKqB,MAAMkB,QAEhD,GAGF,OACE,sBAAK7B,UAAU,cAAf,UACG6B,EACD,cAAC,EAAD,CACEnC,UAAWJ,KAAKqB,MAAMjB,UACtBF,cAAe,SAACoB,GAAD,OAAc,EAAKoB,YAAYpB,MAE/CmB,S,GAhE+BxB,aCDnB0B,E,uKAEjB,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJyBO,aCCjC2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.947d8af7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Styles/CountrySelector.css\";\n\nexport default class CountrySelector extends Component {\n  changeSelection(value) {\n    if (value === \"None\") {\n      this.props.changeHandler(null);\n    } else {\n      // find the country selected\n      const country = this.props.countries.find(\n        (country) => country.name === value\n      );\n      this.props.changeHandler(country);\n    }\n  }\n\n  render() {\n    const options = this.props.countries.map((country, i) => (\n      <option value={country.name} key={i}>\n        {country.name}\n      </option>\n    ));\n\n    return (\n      <div className=\"CountrySelector\">\n        <form>\n          <label htmlFor=\"country\">Select a country:</label>\n          <select\n            id=\"country\"\n            name=\"country\"\n            onChange={(e) => this.changeSelection(e.target.value)}\n          >\n            <option value=\"None\">Select one...</option>\n            {options}\n          </select>\n        </form>\n      </div>\n    );\n  }\n}\n\nCountrySelector.defaultProps = {\n  countries: [],\n};\n","import React from \"react\";\nimport \"../Styles/Demonym.css\";\n\nexport default function Demonym(props) {\n  return (\n    <div className=\"Demonym\">\n      A {props.name} comes from {props.country}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport CountrySelector from \"./CountrySelector\";\nimport Demonym from \"./Demonym\";\nimport \"../Styles/DemonymApp.css\";\n\nexport default class DemonymApp extends Component {\n  //initialize state using a constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      selected: null,\n    };\n  }\n\n  setSelected(selected) {\n    this.setState({\n      selected,\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://country.register.gov.uk/recordsWRONG.json?page-size=5000\")\n      .then((response) => {\n        // check if response is ok\n        console.log(\"About to check for errors\");\n        if (!response.ok) {\n          console.log(\"An error did occur, let's throw an error.\");\n          throw new Error(\"Something went wrong\"); // throw an error\n        }\n        return response; // ok, so just continue\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = Object.keys(data).map((key) => data[key].item[0]);\n        this.setState({\n          countries,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          error: err.message,\n        });\n      });\n  }\n\n  render() {\n    const demon = this.state.selected ? (\n      <Demonym\n        name={this.state.selected[\"citizen-names\"]}\n        country={this.state.selected.name}\n      />\n    ) : (\n      <div className=\"demonym_app__placeholder\">Select a country above</div>\n    );\n\n    const error = this.state.error ? (\n      <div className=\"demonym_app__error\">{this.state.error}</div>\n    ) : (\n      \"\"\n    );\n\n    return (\n      <div className=\"demonym_app\">\n        {error}\n        <CountrySelector\n          countries={this.state.countries}\n          changeHandler={(selected) => this.setSelected(selected)}\n        />\n        {demon}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Styles/App.css\";\nimport DemonymApp from \"./DemonymApp\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <DemonymApp />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n//https://www.registers.service.gov.uk/registers/country/use-the-api\n"],"sourceRoot":""}